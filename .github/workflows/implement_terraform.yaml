name: Implement Terraform

on:
  push:
    branches:
      - develop
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '**.md'

jobs:
  implement-terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    # Use Bash shell
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository on the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tfremote
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Checks that all Terraform configuration files adhere to canonical format
    - name: Terraform Format
      run: terraform fmt -recursive #-check

    # Generate execution plan
    - name: Terraform Plan
      working-directory: examples
      run: |
        tf -cloud aws plan -var='teamid=rumse' -var='prjid=demo'
      env:
        # AWS CREDENTIALS
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        AWS_SECURITY_TOKEN: "${{ secrets.AWS_SECURITY_TOKEN }}"
        AWS_SESSION_TOKEN: "${{ secrets.AWS_SESSION_TOKEN }}"
        TF_AWS_BUCKET: "${{ secrets.TF_AWS_BUCKET }}"
        TF_AWS_PROFILE: "${{ secrets.TF_AWS_PROFILE }}"
        TF_AWS_BUCKET_REGION: "${{ secrets.TF_AWS_BUCKET_REGION }}"

    # On push to main deploy Terraform configuration files
    - name: Terraform Apply
      working-directory: examples
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        tf -cloud gcloud apply -var='teamid=rumse' -var='prjid=demo' -auto-approve
      env:
        # AWS CREDENTIALS
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        AWS_SECURITY_TOKEN: "${{ secrets.AWS_SECURITY_TOKEN }}"
        AWS_SESSION_TOKEN: "${{ secrets.AWS_SESSION_TOKEN }}"
        TF_AWS_BUCKET: "${{ secrets.TF_AWS_BUCKET }}"
        TF_AWS_PROFILE: "${{ secrets.TF_AWS_PROFILE }}"
        TF_AWS_BUCKET_REGION: "${{ secrets.TF_AWS_BUCKET_REGION }}"

    - name: Get current branch name
      id: vars
      run: |
        echo ::set-output name=branch_name::${GITHUB_REF##*/}

    - name: Commit files
      run: |
        git add -A .
        git config --local user.email "terraform+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Add changes"
        git push

    # Create a pull request from develop to master branch
    - name: Pull requests
      if: ${{ steps.vars.outputs.branch_name }} == 'develop'
      uses: vsoch/pull-request-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PULL_REQUEST_BRANCH: "main"
        PULL_REQUEST_FROM_BRANCH: ${{ github.ref }}

